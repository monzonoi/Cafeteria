@page "/gestioncafes"
@using Cafeteria.WEB.Models
@using Cafeteria.WEB.Servicios
@inject CafeService CafeService

<h1>Gestión de Cafés</h1>

<button class="btn btn-primary" @onclick="MostrarFormularioNuevo">Nuevo Café</button>

<!-- Listado de Cafés -->
<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Precio</th>
            <th>Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var cafe in cafes)
        {
            <tr>
                <td>@cafe.Nombre</td>
                <td>@cafe.Precio</td>
                <td>
                    <button class="btn btn-info" @onclick="() => MostrarFormularioEdicion(cafe)">Editar</button>
                    <button class="btn btn-danger" @onclick="() => EliminarCafe(cafe)">Eliminar</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Formulario de Edición/Creación -->
@if (mostrarFormulario)
{
    <div class="modal fade show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@tituloFormulario</h5>
                    <button type="button" class="btn-close" @onclick="CerrarFormulario"></button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="nombre">Nombre</label>
                        <input class="form-control" id="nombre" @bind="cafeEdit.Nombre" />
                    </div>
                    <div class="form-group">
                        <label for="precio">Precio</label>
                        <input type="number" class="form-control" id="precio" @bind="cafeEdit.Precio" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CerrarFormulario">Cancelar</button>
                    <button class="btn btn-primary" @onclick="GuardarCafe">Guardar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Cafe> cafes = new List<Cafe>();
    private Cafe cafeEdit = new Cafe();
    private bool mostrarFormulario = false;
    private string tituloFormulario = "";

    protected override async Task OnInitializedAsync()
    {
        cafes = await CafeService.ObtenerCafesAsync();
    }

    private void MostrarFormularioNuevo()
    {
        cafeEdit = new Cafe();
        tituloFormulario = "Nuevo Café";
        mostrarFormulario = true;
    }

    private void MostrarFormularioEdicion(Cafe cafe)
    {
        cafeEdit = cafe;
        tituloFormulario = "Editar Café";
        mostrarFormulario = true;
    }

    private async Task GuardarCafe()
    {
        if (cafeEdit.Id == 0)
        {
            // Nuevo café
            await CafeService.CrearCafeAsync(cafeEdit);
        }
        else
        {
            // Actualizar café existente
            await CafeService.ActualizarCafeAsync(cafeEdit);
        }
        cafes = await CafeService.ObtenerCafesAsync();
        mostrarFormulario = false;
    }

    private async Task EliminarCafe(Cafe cafe)
    {
        await CafeService.EliminarCafeAsync(cafe.Id);
        cafes = await CafeService.ObtenerCafesAsync();
    }

    private void CerrarFormulario()
    {
        mostrarFormulario = false;
    }
}
